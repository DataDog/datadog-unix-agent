version: 2

# This file uses YAML anchors to deduplicate steps
# see https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
# and https://learnxinyminutes.com/docs/yaml/

experimental:
  notify:
    branches:
      only:
        - master

templates:
  job_template: &job_template
    docker:
      - image: circleci/python:3.6.8
    working_directory: ~/datadog-unix-agent
  step_templates:
    - restore_cache: &restore_deps
        keys:
          # The first match will be used. Doing that so new branches
          # use master's cache but don't pollute it back.
          #
          # If incremental dep fails, increase the cache gen number
          # in restore_deps AND save_deps
          # See https://github.com/DataDog/datadog-agent/pull/2384
          - gen0-deps-{{ .Branch }}-{{ .Revision }}
          - gen0-deps-{{ .Branch }}-
          - gen0-deps-master-
    - save_cache: &save_deps
        key: gen0-deps-{{ .Branch }}-{{ .Revision }}
    - restore_cache: &restore_source
        keys:
          # Cache retrieval is faster than full git checkout
          - v0-repo-{{ .Revision }}
    - save_cache: &save_source
        key: v0-repo-{{ .Revision }}
    - run: &enter_venv
        name: add virtualenv to bashrc
        command: echo "source ~/datadog-unix-agent/venv/bin/activate" >> $BASH_ENV

jobs:
  checkout_code:
    <<: *job_template
    steps:
      - checkout
      - save_cache:
          <<: *save_source
          paths:
            - ~/datadog-unix-agent

  dependencies:
    <<: *job_template
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - run:
          name: setup virtual env
          command: virtualenv ~/datadog-unix-agent/venv
      - run: *enter_venv
      - run:
          name: setup python runtime deps
          command: pip install -r requirements.txt
      - run:
          name: setup python developer deps
          command: pip install -c requirements.txt -r requirements-dev.txt
      - save_cache:
          <<: *save_deps
          paths:
            - ~/datadog-unix-agent/venv
            - /usr/local/lib/python3.6/dist-packages

  unit_tests:
    <<: *job_template
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - run: *enter_venv
      - run:
          name: run tests
          command: inv test

  license_verification:
    <<: *job_template
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - run: *enter_venv
      - run:
          name: checking license headers
          command: inv lint-licenses

  lint:
    <<: *job_template
    steps:
      - restore_cache: *restore_source
      - restore_cache: *restore_deps
      - run: *enter_venv
      - run:
          name: flake8 project
          command: inv flake8
      - run:
          name: pylint project
          environment:
            TERM: rxvt
          command: inv lint-py

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - dependencies:
          requires:
            - checkout_code
      - lint:
          requires:
            - dependencies
      - unit_tests:
          requires:
            - dependencies
      - license_verification:
          requires:
            - dependencies
