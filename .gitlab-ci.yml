image: python:2.7-stretch

test:
  tags: [ "runner:main", "size:large" ]
  before_script:
  - pip install -r requirements-dev.txt
  - pip install -r requirements.txt
  - flake8
  script:
  - python -m pytest -v .
  - for d in $(find checks/bundled -mindepth 1 -maxdepth 1 -not -name ".*" -not -name "datadog_checks_base" -type d); do python -m pytest -v $d; done

# checking that every python file as a license header (at least the first line)
check-license-py:
  tags: [ "runner:main", "size:large" ]
  script:
  - if git grep -L '# Unless explicitly stated otherwise all files in this repository are licensed' -- -- './*' ':(exclude)./deps/*' | grep -e '.*\.py$'; then exit 1; else echo "all good"; fi

# checking that every python file as a license header (at least the first line)
check-py3-status:
  tags: [ "runner:main", "size:large" ]
  allow_failure: true
  variables:
    TERM: xterm
  before_script:
  - apt update && apt-get install -y jq
  - pip install -r requirements-dev.txt
  script:
  - for py in $(find . -type f -name '*.py' ! -path "./venv/*" ! -path "./*/.tox/*"); do echo -n "scanning $py..."; red=$(tput setaf 1); green=$(tput setaf 2); reset=$(tput sgr0); output=$(a7_validate $py) ; first=$(echo $output | jq '.[0]') ; if [ "$first" = "null" ]; then echo -e "\t${green}python3 compatible${reset}"; else echo -e "\n${red}$(echo $output | jq .)${reset}"; FAILED=$((FAILED + 1)); fi ; done ; exit $FAILED
