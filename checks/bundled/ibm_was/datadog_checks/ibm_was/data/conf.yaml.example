## All options defined here are available to all instances.
#
init_config:

## Every instance is scheduled independent of the others.
#
instances:

    ## @param servlet_url - string - required
    ## The URL of the PerfServlet configured to report metrics.
    ## Note: The default port is usually 9080.
    #
  - servlet_url: http://localhost:<PORT>/wasPerfTool/servlet/perfservlet

    ## @param collect_jdbc_stats - boolean - optional - default: true
    ## Whether or not to collect JDBC Connection Pool stats
    #
    # collect_jdbc_stats: true

    ## @param collect_jvm_stats - boolean - optional - default: true
    ## Whether or not to collect JVM Runtime stats
    #
    # collect_jvm_stats: true

    ## @param collect_servlet_session_stats - boolean - optional - default: true
    ## Whether or not to collect Servlet Session Manager stats
    #
    # collect_servlet_session_stats: true

    ## @param collect_thread_pool_stats - boolean - optional - default: true
    ## Whether or not to collect Thread Pools stats
    #
    # collect_thread_pool_stats: true

    ## @param custom_queries - list of mappings - optional
    ## List of custom or additional XML attributes to parse and submit as metrics
    ## Each must contain a `metric_prefix` and `stat` element
    ## If the `stat` node has sub `stat` nodes, the name of these nodes must be specified
    ## in the order they occur within the XML document and will be displayed as tags.
    ## The metric will be named `ibmwas.<metric_prefix>.<xml_attribute_name>` and be tagged with the
    ## `name` value of the corresponding `tag_keys` attributes.
    ##
    ## <Stat name="Thread Pools Custom">
    ##   <Stat name="AriesThreadPool">
    ##     <TimeStatistic name="ActiveTime" totalTime="0" ... />
    ##   </Stat>
    ##   <Stat name="Default">
    ##     <CountStatistic name="DeclaredThreadHungCount" count="0" ... />
    ##   </Stat>
    ## </Stat>
    ##
    ## The following custom query would emit:
    ## self.gauge('ibm_was.thread_pools.ActiveTime', value=0, tags=['threadKey:AriesThreadPool', ...])
    ## self.gauge('ibm_was.thread_pools.DeclaredThreadHungCount', value=0, tags=['threadKey:Default', ...])
    #
    # custom_queries:
    #   - metric_prefix: thread_pools
    #     stat: Thread Pools Custom
    #     tag_keys:
    #     - threadKey

    ## @param custom_queries_units_gauge - list of strings - optional
    ## List of unit names used to map CountStatistic to gauge in custom queries.
    ## By default CountStatistic stats are submitted as monotonic count, but some of them actually contain
    ## data which are gauge, as they have data with a unit. To get that behavior, the unit can be added here
    ## and the check will translate the metric type.
    ##
    ## For example:
    ## <Stat name="xdProcessModule">
    ##   <CountStatistic ID="4" count="11779168" name="totalMemory" unit="unit.kbyte" ... />
    ## </Stat>
    ##
    ## would be submitted as a count, but will be as a gauge if `unit.kbyte` is present in `custom_queries_units_gauge`.
    #
    # custom_queries_units_gauge:
    #   - unit.kbyte
    #   - kilobyte
    #   - second

    ## @param username - string - optional
    ## The username to use if services are behind basic or digest auth.
    #
    # username: <USERNAME>

    ## @param password - string - optional
    ## The password to use if services are behind basic or NTLM auth.
    #
    # password: <PASSWORD>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param tls_cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificate's authenticity for
    ## use when connecting to services. It may also contain an unencrypted private key to use.
    #
    # tls_cert: <CERT_PATH>

    ## @param tls_private_key - string - optional
    ## The unencrypted private key to use for `tls_cert` when connecting to services. This is
    ## required if `tls_cert` is set and it does not already contain a private key.
    #
    # tls_private_key: <PRIVATE_KEY_PATH>

    ## @param tls_ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    #
    # tls_ca_cert: <CA_CERT_PATH>

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15
